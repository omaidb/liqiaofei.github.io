<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Centos7安装hexo</title>
    <url>/2022/04/23/Centos7%E5%AE%89%E8%A3%85hexo/</url>
    <content><![CDATA[<h2 id="yum安装nodejs-LTS-V16"><a href="#yum安装nodejs-LTS-V16" class="headerlink" title="yum安装nodejs LTS V16"></a>yum安装nodejs LTS V16</h2><p>nodejs地址: <a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装yum源</span></span><br><span class="line">curl -fsSL https://rpm.nodesource.com/setup_lts.x | bash -</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum安装nodejs</span></span><br><span class="line">sudo yum -y install nodejs</span><br></pre></td></tr></table></figure>





<h3 id="查看node和npm版本"><a href="#查看node和npm版本" class="headerlink" title="查看node和npm版本"></a>查看node和npm版本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>



<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo</span><br><span class="line"></span><br><span class="line">hexo -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装hexo部署插件</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装hexo-server，用于预览静态网站</span></span><br><span class="line">npm install hexo-server --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装本地搜索插件</span></span><br><span class="line">npm install hexo-generator-searchdb --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装文章字数统计及阅读时常功能</span></span><br><span class="line">npm install hexo-wordcount --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装图片显示插件(实测没用)</span></span><br><span class="line">npm install hexo-asset-img --save</span><br></pre></td></tr></table></figure>



<h2 id="发布文件"><a href="#发布文件" class="headerlink" title="发布文件"></a>发布文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编辑这个文章</span></span><br><span class="line"><span class="built_in">source</span>\_posts\hexo部署gitpage.md</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决办法清除缓存和已生成的静态文件</span></span><br><span class="line"><span class="comment"># 生成静态页面并发布文章</span></span><br><span class="line"><span class="comment"># 打开hexo服务</span></span><br><span class="line">hexo clean &amp;&amp; hexo g -d &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos7安装socks5</title>
    <url>/2022/04/23/Centos7%E6%90%AD%E5%BB%BAsocks5/</url>
    <content><![CDATA[<h2 id="编译安装socks5"><a href="#编译安装socks5" class="headerlink" title="编译安装socks5"></a>编译安装socks5</h2><h3 id="安装编译环境"><a href="#安装编译环境" class="headerlink" title="安装编译环境"></a>安装编译环境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ automake make pam-devel openldap-devel cyrus-sasl-devel openssl-devel</span><br></pre></td></tr></table></figure>



<h3 id="下载源码包"><a href="#下载源码包" class="headerlink" title="下载源码包"></a>下载源码包</h3><p>项目地址: <a href="http://ss5.sourceforge.net/software.htm">http://ss5.sourceforge.net/software.htm</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://jaist.dl.sourceforge.net/project/ss5/ss5/3.8.9-8/ss5-3.8.9-8.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar zxvf ss5-3.8.9-8.tar.gz</span><br><span class="line"><span class="built_in">cd</span> ss5-3.8.9/</span><br><span class="line">./configure &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h3 id="修改配置文件ss5-conf"><a href="#修改配置文件ss5-conf" class="headerlink" title="修改配置文件ss5.conf"></a>修改配置文件ss5.conf</h3><p><code>vim /etc/opt/ss5/ss5.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#auth段  SHost SPort  Authentication</span></span><br><span class="line"><span class="comment">#认证    源地址段 源端口  认证方式</span></span><br><span class="line"><span class="comment">#认证    允许所有地址所有端口访问  以用户密码验证</span></span><br><span class="line">auth 0.0.0.0/0 - u</span><br><span class="line"></span><br><span class="line"><span class="comment">#permit段 Auth    SHost    SPort  DHost       DPort     Fixup   Group   Band    ExpDate</span></span><br><span class="line"><span class="comment">#permit段 认证方式 源地址段  源端口  目的地地址段 目的地端口 Fixup   Group   Band    ExpDate</span></span><br><span class="line">permit u 0.0.0.0/0 - 0.0.0.0/0 - - - - -</span><br></pre></td></tr></table></figure>

<h3 id="添加用户名和密码"><a href="#添加用户名和密码" class="headerlink" title="添加用户名和密码"></a>添加用户名和密码</h3><p><code>vim /etc/opt/ss5/ss5.passwd</code></p>
<p>一行一个账号，用户名和密码之间用空格间隔</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">user1 mima123</span><br><span class="line">user2 mima123</span><br></pre></td></tr></table></figure>



<h3 id="创建服务用户"><a href="#创建服务用户" class="headerlink" title="创建服务用户"></a>创建服务用户</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建服务账号ssproxy</span></span><br><span class="line">useradd -M -s /sbin/nologin ssproxy</span><br><span class="line"><span class="comment">#-M 不指定home</span></span><br><span class="line"><span class="comment">#-s 指定shell为nologin</span></span><br></pre></td></tr></table></figure>



<h3 id="修改暴露的端口"><a href="#修改暴露的端口" class="headerlink" title="修改暴露的端口"></a>修改暴露的端口</h3><p><code>vim /etc/sysconfig/ss5</code></p>
<p>添加一行，-b后面的参数代表监听的ip地址和端口号,-u 后面的参数表示本地计算机以哪个账户连接</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Add startup option here</span></span><br><span class="line">SS5_OPTS=<span class="string">&quot; -u ssproxy -b 0.0.0.0:1080&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="添加权限并设置开机自启动"><a href="#添加权限并设置开机自启动" class="headerlink" title="添加权限并设置开机自启动"></a>添加权限并设置开机自启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加可执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x /etc/init.d/ss5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入服务</span></span><br><span class="line">chkconfig --add ss5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启动并现在启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now ss5</span><br></pre></td></tr></table></figure>



<h3 id="查看本地端口监听状态"><a href="#查看本地端口监听状态" class="headerlink" title="查看本地端口监听状态"></a>查看本地端口监听状态</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ss -tunlp|grep 1080</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>socks5</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos8安装trojan</title>
    <url>/2022/02/22/Centos8%E5%AE%89%E8%A3%85trojan/</url>
    <content><![CDATA[<h2 id="yum安装前置代理"><a href="#yum安装前置代理" class="headerlink" title="yum安装前置代理"></a>yum安装前置代理</h2><p>前置代理trojan依赖<code>epel</code>源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install trojan</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件目录</span></span><br><span class="line">/etc/trojan/config.json</span><br></pre></td></tr></table></figure>

<br/>

<h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><p>如果提示: <code>SSL handshake failed</code></p>
<p>您需要将配置文件中的 “verify”:true,”verify_hostname”:true, 修改为 <code>false</code> </p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;run_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;client&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;local_addr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;local_port&quot;</span><span class="punctuation">:</span> <span class="number">1080</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;remote_addr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pac.ibm.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;remote_port&quot;</span><span class="punctuation">:</span> <span class="number">443</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;ibm123&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;log_level&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ssl&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;verify&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;verify_hostname&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;cert&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;cipher&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:AES128-SHA:AES256-SHA:DES-CBC3-SHA&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;cipher_tls13&quot;</span><span class="punctuation">:</span> <span class="string">&quot;TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sni&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;alpn&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;h2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;http/1.1&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;reuse_session&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;session_ticket&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;curves&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tcp&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;no_delay&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;keep_alive&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;reuse_port&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;fast_open&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;fast_open_qlen&quot;</span><span class="punctuation">:</span> <span class="number">20</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<br/>

<h2 id="ansible安装trojan剧本"><a href="#ansible安装trojan剧本" class="headerlink" title="ansible安装trojan剧本"></a>ansible安装trojan剧本</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">trojan</span> <span class="string">telnet</span> <span class="string">proxychains-ng</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> [<span class="string">trojan</span>,<span class="string">telnet</span>,<span class="string">proxychains-ng</span>]</span><br><span class="line">        <span class="attr">state:</span> <span class="string">latest</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">拷贝trojan配置文件</span></span><br><span class="line">      <span class="attr">template:</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">/root/ansible/trojan.json.j2</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/etc/trojan/config.json</span></span><br><span class="line">      <span class="attr">notify:</span> <span class="string">restat</span> <span class="string">trojan</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">配置proxychains.conf为127.0.0.1</span> <span class="number">1080</span></span><br><span class="line">      <span class="attr">lineinfile:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/etc/proxychains.conf</span></span><br><span class="line">        <span class="attr">regexp:</span> <span class="string">&#x27;socks4 	127.0.0.1 9050&#x27;</span></span><br><span class="line">        <span class="attr">line:</span> <span class="string">&#x27;socks5 127.0.0.1 1080&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启动并开机自启trojan务</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">trojan</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">yes</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">handlers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restat</span> <span class="string">trojan</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">trojan</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">restarted</span></span><br></pre></td></tr></table></figure>



<br/>



<h2 id="源码安装前置代理"><a href="#源码安装前置代理" class="headerlink" title="源码安装前置代理"></a>源码安装前置代理</h2><p>项目地址: <a href="https://github.com/trojan-gfw/trojan/releases">https://github.com/trojan-gfw/trojan/releases</a><br>​<br><br/></p>
<h3 id="下载安装trojan"><a href="#下载安装trojan" class="headerlink" title="下载安装trojan"></a>下载安装trojan</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载traojan</span></span><br><span class="line">wget https://ghproxy.com/https://github.com/trojan-gfw/trojan/releases/download/v1.16.0/trojan-1.16.0-linux-amd64.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar xvf trojan-1.16.0-linux-amd64.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动主程序到/usr/bin/</span></span><br><span class="line"><span class="built_in">cd</span> trojan/trojan /usr/bin/</span><br></pre></td></tr></table></figure>

<br/>

<h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/trojan &amp;&amp; <span class="built_in">touch</span> /etc/trojan/config.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从从官网获取config配置,粘贴到config.json中</span></span><br></pre></td></tr></table></figure>

<h3 id="开机自启service文件"><a href="#开机自启service文件" class="headerlink" title="开机自启service文件"></a>开机自启service文件</h3><p>将下列内容写入<code>/usr/lib/systemd/system/trojan.service</code>文件中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line"><span class="comment"># 服务的定义描述</span></span><br><span class="line">Description=trojan</span><br><span class="line">Documentation=man:trojan(1) https://trojan-gfw.github.io/trojan/config https://trojan-gfw.github.io/trojan/</span><br><span class="line"><span class="comment"># 服务启动的前置条件</span></span><br><span class="line">After=network.target network-online.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="comment"># service类型</span></span><br><span class="line">Type=simple</span><br><span class="line">StandardError=journal</span><br><span class="line"><span class="comment"># 由哪个用户运行</span></span><br><span class="line">User=nobody</span><br><span class="line">AmbientCapabilities=CAP_NET_BIND_SERVICE</span><br><span class="line"><span class="comment"># 需要启动的程序</span></span><br><span class="line">ExecStart=/usr/bin/trojan /etc/trojan/config.json</span><br><span class="line"></span><br><span class="line">ExecReload=/bin/kill -HUP <span class="variable">$MAINPID</span></span><br><span class="line"><span class="comment"># 重启策略,失败时重启</span></span><br><span class="line">Restart=on-failure</span><br><span class="line"><span class="comment"># 重启间隔时间</span></span><br><span class="line">RestartSec=1s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="comment"># 定义service放在哪个target里面</span></span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>



<br/>

<h3 id="配置开机自启动"><a href="#配置开机自启动" class="headerlink" title="配置开机自启动"></a>配置开机自启动</h3><p>参考: <a href="https://blog.csdn.net/omaidb/article/details/120519191">https://blog.csdn.net/omaidb/article/details/120519191</a><br>​<br><br/></p>
<h4 id="安装supervisor"><a href="#安装supervisor" class="headerlink" title="安装supervisor"></a>安装supervisor</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#启用epel库</span></span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">yum install -y supervisor</span><br><span class="line"></span><br><span class="line"><span class="comment">#开机自启</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now supervisord</span><br></pre></td></tr></table></figure>

<br/>

<h4 id="配置trojan开机自启"><a href="#配置trojan开机自启" class="headerlink" title="配置trojan开机自启"></a>配置trojan开机自启</h4><p>在<code>/etc/supervisord.d</code>中创建<code>trojan.ini</code>文件.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#程序的名称</span></span><br><span class="line">[program:trojan] </span><br><span class="line"><span class="comment">#执行的命令</span></span><br><span class="line"><span class="built_in">command</span> = /opt/trojan/trojan -c /opt/trojan/trojan/config.json</span><br><span class="line"><span class="comment">#命令执行的目录</span></span><br><span class="line">directory = /opt/trojan/</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行进程的用户</span></span><br><span class="line">user = root </span><br><span class="line"><span class="comment">#停止方法</span></span><br><span class="line">stopsignal = INT</span><br><span class="line"><span class="comment">#是否自动启动</span></span><br><span class="line">autostart = <span class="literal">true</span> </span><br><span class="line"><span class="comment">#是否自动重启</span></span><br><span class="line">autorestart = <span class="literal">true</span> </span><br><span class="line"><span class="comment">#自动重启间隔</span></span><br><span class="line">startsecs = 1 </span><br><span class="line"><span class="comment">#错误输出路径</span></span><br><span class="line">stderr_logfile = /var/log/trojan.err.log </span><br><span class="line"><span class="comment">#日志输出路径</span></span><br><span class="line">stdout_logfile = /var/log/trojan.out.log</span><br></pre></td></tr></table></figure>

<br/>

<h4 id="启动trojan"><a href="#启动trojan" class="headerlink" title="启动trojan"></a>启动trojan</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 热重启，不会重启其他子进程(reread是重读的意思,比reload高级)</span></span><br><span class="line">supervisorctl reread</span><br><span class="line"><span class="comment"># 使用update命令,也会启动脚本</span></span><br><span class="line">supervisorctl update</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看所有任务状态</span></span><br><span class="line">supervisorctl status </span><br></pre></td></tr></table></figure>

<br/>

<h3 id="测试trojan"><a href="#测试trojan" class="headerlink" title="测试trojan"></a>测试trojan</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">telnet 127.0.0.1 1080</span><br></pre></td></tr></table></figure>

<br/>



<h2 id="ansible源码安装trojan剧本"><a href="#ansible源码安装trojan剧本" class="headerlink" title="ansible源码安装trojan剧本"></a>ansible源码安装trojan剧本</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">wget</span> <span class="string">tojan</span></span><br><span class="line">      <span class="attr">get_url:</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">https://ghproxy.com/https://github.com/trojan-gfw/trojan/releases/download/v1.16.0/trojan-1.16.0-linux-amd64.tar.xz</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/root/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">/opt</span></span><br><span class="line">      <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/opt</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">解压文件</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">tar</span> <span class="string">xvf</span> <span class="string">trojan-1.16.0-linux-amd64.tar.xz</span> <span class="string">-C</span> <span class="string">/opt/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">创建json配置文件</span></span><br><span class="line">      <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/opt/trojan/config.json</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">file</span></span><br><span class="line">        </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">添加json配置</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">content:</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123; 从官网复制配置内容 &#125;&#125;</span>&#x27;</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/opt/trojan/config.json</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装supervisor</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">supervisor</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启动并开机自启supervisor服务</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">supervisord</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">yes</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">配置trojan开机自启</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">/root/ansible/trojan.ini</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/etc/supervisord.d/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启动trojan</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">&#x27;supervisorctl reread &amp;&amp; supervisorctl update&#x27;</span></span><br></pre></td></tr></table></figure>
<br/>

<h2 id="设置临时全局代理"><a href="#设置临时全局代理" class="headerlink" title="设置临时全局代理"></a>设置临时全局代理</h2><p><a href="https://zhuanlan.zhihu.com/p/46973701">https://zhuanlan.zhihu.com/p/46973701</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> ALL_PROXY=socks5://127.0.0.1:1080</span><br><span class="line"><span class="comment"># 如果想开机自启,写入到`.bashrc`中</span></span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>Centos</tag>
      </tags>
  </entry>
  <entry>
    <title>Zerotier one安装教程</title>
    <url>/2022/03/10/Zerotier%20one%20%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="Windows版客户端安装"><a href="#Windows版客户端安装" class="headerlink" title="Windows版客户端安装"></a>Windows版客户端安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">choco install zerotier-one -y</span><br></pre></td></tr></table></figure>

<h2 id="Linux版客户端安装"><a href="#Linux版客户端安装" class="headerlink" title="Linux版客户端安装"></a>Linux版客户端安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -s https://install.zerotier.com | sudo bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 带gpg安装</span></span><br><span class="line">curl -s <span class="string">&#x27;https://raw.githubusercontent.com/zerotier/ZeroTierOne/master/doc/contact%40zerotier.com.gpg&#x27;</span> | gpg --import &amp;&amp; \</span><br><span class="line"><span class="keyword">if</span> z=$(curl -s <span class="string">&#x27;https://install.zerotier.com/&#x27;</span> | gpg); <span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$z</span>&quot;</span> | sudo bash; <span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>Redhat系Linux直接下载rpm包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://download.zerotier.com/redhat/el/7.9/</span><br></pre></td></tr></table></figure>

<p>安装rpm包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh *.rpm </span><br></pre></td></tr></table></figure>

<p>来自 <a href="https://www.zerotier.com/download/">https://www.zerotier.com/download/</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装完会自动运行,设置开机启动</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now zerotier-one.service</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#加入网络</span></span><br><span class="line">sudo zerotier-cli <span class="built_in">join</span> 9f77fc393e83973e</span><br><span class="line"></span><br><span class="line"><span class="comment">#离开网络</span></span><br><span class="line">sudo zerotier-cli leave Network ID</span><br><span class="line"></span><br><span class="line"><span class="comment">#列出整个网络中的所有节点</span></span><br><span class="line">sudo zerotier-cli listnetworks</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">sudo zerotier-cli status</span><br></pre></td></tr></table></figure>

<h3 id="Centos6安装"><a href="#Centos6安装" class="headerlink" title="Centos6安装"></a>Centos6安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum install https://download.zerotier.com/redhat/el/6.9/zerotier-one-1.6.6-1.el6.x86_64.rpm -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动程序</span></span><br><span class="line">zerotier-one -d</span><br><span class="line"><span class="comment">## 或 </span></span><br><span class="line">service zerotier-one start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置服务开机自启</span></span><br><span class="line">chkconfig zerotier-one on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看开机自启是否成功</span></span><br><span class="line">chkconfig zerotier-one --list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入网络</span></span><br><span class="line">sudo zerotier-cli <span class="built_in">join</span> 9f77fc393e83973e</span><br></pre></td></tr></table></figure>

<h2 id="Mac-os安装"><a href="#Mac-os安装" class="headerlink" title="Mac os安装"></a>Mac os安装</h2><p>支持MacOS 10.10或更高版本。可以从终端使用以下命令来控制，重新启动或卸载服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">sudo zerotier-cli status</span><br><span class="line"></span><br><span class="line"><span class="comment">##加入网络</span></span><br><span class="line">sudo zerotier-cli <span class="built_in">join</span> 9f77fc393e83973e</span><br><span class="line"></span><br><span class="line"><span class="comment"># 离开网络</span></span><br><span class="line">sudo zerotier-cli leave <span class="comment">################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出整个网络中的所有节点</span></span><br><span class="line">sudo zerotier-cli listnetworks</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用launchctl 添加启动服务</span></span><br><span class="line"><span class="comment">#添加启动服务</span></span><br><span class="line">sudo launchctl load /Library/LaunchDaemons/com.zerotier.one.plist</span><br><span class="line"><span class="comment">#卸载启动服务</span></span><br><span class="line">sudo launchctl unload /Library/LaunchDaemons/com.zerotier.one.plist</span><br><span class="line"></span><br><span class="line"><span class="comment">#卸载ZeroTier</span></span><br><span class="line">sudo <span class="string">&quot;/Library/Application Support/ZeroTier/One/uninstall.sh&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Zerotier one</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/03/10/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>hexo部署gitpage</title>
    <url>/2022/03/10/hexo%E9%83%A8%E7%BD%B2gitpage/</url>
    <content><![CDATA[<p>参考: <a href="https://hexo.io/zh-cn/docs/setup">https://hexo.io/zh-cn/docs/setup</a></p>
<p><a href="https://qlzhu.github.io/blog/51941/">https://qlzhu.github.io/blog/51941/</a></p>
<h2 id="安装npm"><a href="#安装npm" class="headerlink" title="安装npm"></a>安装npm</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">choco install nodejs-lts -y</span><br></pre></td></tr></table></figure>



<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装hexo部署插件</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装hexo-server，用于预览静态网站</span></span><br><span class="line">npm install hexo-server --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装本地搜索插件</span></span><br><span class="line">npm install hexo-generator-searchdb --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装文章字数统计及阅读时常功能</span></span><br><span class="line">npm install hexo-wordcount --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装图片显示插件(实测没用)</span></span><br><span class="line">npm install hexo-asset-img --save</span><br></pre></td></tr></table></figure>



<h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># clone代码库</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/omaidb/omaidb.github.io.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># cd 到你的githubpage目录下</span></span><br><span class="line"><span class="built_in">cd</span> omaidb.github.io</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化站点</span></span><br><span class="line"><span class="built_in">mkdir</span> blog &amp;&amp; <span class="built_in">cd</span> blog</span><br><span class="line">hexo init</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将blog目录下的文件全部拷贝到git项目下,拷贝完成后可以删除blog目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将hexo代码上传</span></span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">&#x27;hexo init&#x27;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>



<h2 id="新建一篇文章"><a href="#新建一篇文章" class="headerlink" title="新建一篇文章"></a>新建一篇文章</h2><p><a href="https://hexo.io/zh-cn/docs/commands">https://hexo.io/zh-cn/docs/commands</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新建一篇文章</span></span><br><span class="line">hexo new [layout] &lt;title&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">hexo new <span class="string">&quot;文章标题&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑这个文章</span></span><br><span class="line"><span class="built_in">source</span>\_posts\hexo部署gitpage.md</span><br></pre></td></tr></table></figure>



<h2 id="创建一个about-me页面"><a href="#创建一个about-me页面" class="headerlink" title="创建一个about me页面"></a>创建一个about me页面</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page --path about/me <span class="string">&quot;About me&quot;</span></span><br></pre></td></tr></table></figure>





<h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成静态文件hexo generate</span></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line"><span class="comment"># 持续生成静态文件</span></span><br><span class="line">hexo g -w</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成并立即发布文章</span></span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure>



<h2 id="发表草稿"><a href="#发表草稿" class="headerlink" title="发表草稿"></a>发表草稿</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo publish [layout] &lt;filename&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">hexo publish <span class="string">&quot;文章标题&quot;</span></span><br></pre></td></tr></table></figure>



<h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br><span class="line"><span class="comment"># 会打开http://localhost:4000/</span></span><br></pre></td></tr></table></figure>



<h2 id="常见问题-部署后-网页仍未更新"><a href="#常见问题-部署后-网页仍未更新" class="headerlink" title="常见问题:部署后,网页仍未更新"></a>常见问题:部署后,网页仍未更新</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 解决办法清除缓存和已生成的静态文件</span></span><br><span class="line"><span class="comment"># 生成静态页面并发布文章</span></span><br><span class="line"><span class="comment"># 打开hexo服务</span></span><br><span class="line">hexo clean &amp;&amp; hexo g -d &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>





<h2 id="其他美化"><a href="#其他美化" class="headerlink" title="其他美化"></a>其他美化</h2><p>参考: <a href="https://blog.csdn.net/as480133937/article/details/100138838">hexo-next主题配置</a></p>
<h2 id="hexo不显示图片"><a href="#hexo不显示图片" class="headerlink" title="hexo不显示图片"></a>hexo不显示图片</h2><p>找好久,有让装插件的,有改Typora图片路径的,但是都不奏效哈.头疼,还没解决.</p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>遇到的k8s面试题</title>
    <url>/2022/03/11/k8s%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    <content><![CDATA[<h2 id="硬驱逐和软驱逐"><a href="#硬驱逐和软驱逐" class="headerlink" title="硬驱逐和软驱逐"></a>硬驱逐和软驱逐</h2><h3 id="答"><a href="#答" class="headerlink" title="答:"></a>答:</h3><p>参考: <a href="https://kubernetes.io/zh/docs/concepts/scheduling-eviction/node-pressure-eviction/#soft-eviction-thresholds">硬驱逐条件和软驱逐条件</a></p>
<p><a href="https://www.cnblogs.com/yaohong/p/13245723.html">kubernetes-pod驱逐机制</a></p>
<p>1、硬驱逐：没有宽限期,硬驱逐条件时， kubelet 会立即杀死 pod<br>2、软驱逐：有宽限期, 在超过宽限期之前，kubelet 不会驱逐 Pod。</p>
<p><img src="/k8s%E9%9D%A2%E8%AF%95%E9%A2%98/image-20220311125648437.png" alt="image-20220311125648437"></p>
<h2 id="deployment如何像daemonset一样每个node运行一个"><a href="#deployment如何像daemonset一样每个node运行一个" class="headerlink" title="deployment如何像daemonset一样每个node运行一个"></a>deployment如何像daemonset一样每个node运行一个</h2><h3 id="答-1"><a href="#答-1" class="headerlink" title="答:"></a>答:</h3><p>用<code>pod反亲和</code>可以实现.</p>
<h2 id="svc和endpoint的区别"><a href="#svc和endpoint的区别" class="headerlink" title="svc和endpoint的区别"></a>svc和endpoint的区别</h2><h3 id="答-2"><a href="#答-2" class="headerlink" title="答:"></a>答:</h3><h4 id="svc工作原理"><a href="#svc工作原理" class="headerlink" title="svc工作原理:"></a>svc工作原理:</h4><p>svc是通过标签选择pod.</p>
<h4 id="endpoint工作原理"><a href="#endpoint工作原理" class="headerlink" title="endpoint工作原理:"></a>endpoint工作原理:</h4><p>endpoint是监听svc选择的pod的ip.通过kube-proxy来轮询访问pod.</p>
<h2 id="ansible中include-和-import的区别"><a href="#ansible中include-和-import的区别" class="headerlink" title="ansible中include 和 import的区别"></a>ansible中include 和 import的区别</h2><p>参考: <a href="https://www.cnblogs.com/leffss/p/14632423.html#include%E5%92%8Cimport%E5%8C%BA%E5%88%AB">ansible中include 和 import的区别</a></p>
<h3 id="答-3"><a href="#答-3" class="headerlink" title="答:"></a>答:</h3><p><code>ansible</code> 目前有 <code>import_tasks</code>、<code>include_tasks</code>、<code>import_playbook</code>、<code>include_playbook</code>、<code>import_role</code>、<code>include_role</code></p>
<p><code>import</code> 和 <code>include</code> 区别相近：<br><strong>区别一</strong></p>
<ul>
<li><code>import_tasks(Static)</code>方法会在<code>playbooks</code>解析阶段将<code>父task变量</code>和<code>子task变量</code>全部读取并加载</li>
<li><code>include_tasks(Dynamic)</code>方法则是在执行<code>play</code>之前才会<code>加载自己变量</code></li>
</ul>
<p>**区别二 **</p>
<ul>
<li><p><code>include_tasks</code>方法调用的文件名称可以加变量</p>
</li>
<li><p><code>import_tasks</code>方法调用的文件名称不可以有变量</p>
</li>
</ul>
<p><strong>具体参考：<a href="https://www.cnblogs.com/mauricewei/p/10054041.html">https://www.cnblogs.com/mauricewei/p/10054041.html</a></strong></p>
<p>也正是因为「include_task」是动态导入，当我们给「include_role」导入的role打tag时，实际并不会执行该role的task。</p>
<h2 id="RUN-CMD-ENTRYPOINT的区别"><a href="#RUN-CMD-ENTRYPOINT的区别" class="headerlink" title="RUN,CMD,ENTRYPOINT的区别"></a>RUN,CMD,ENTRYPOINT的区别</h2><p>参考 <a href="https://www.jianshu.com/p/f0a0f6a43907">RUN,CMD,ENTRYPOINT的区别</a></p>
<ul>
<li><code>RUN</code>命令执行命令并创建新的镜像层，通常用于安装软件包</li>
<li><code>CMD</code>命令设置容器启动后默认执行的命令及其参数，但CMD设置的命令能够被docker run命令后面的命令行参数替换</li>
<li><code>ENTRYPOINT</code>配置容器启动时的执行命令（不会被忽略，一定会被执行，即使运行 docker run时指定了其他命令）</li>
</ul>
]]></content>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>macOS剪切快捷键</title>
    <url>/2022/02/22/macOS%E5%89%AA%E5%88%87%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h3 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h3><p>选定源文件，按<code>Command+C</code> 快捷键拷贝到剪贴板</p>
<br/>



<h3 id="粘贴"><a href="#粘贴" class="headerlink" title="粘贴"></a>粘贴</h3><p>转到目标文件夹，按<code>Command+V</code>可将源文件复制到目标文件夹</p>
<br/>



<h3 id="剪切文件"><a href="#剪切文件" class="headerlink" title="剪切文件"></a>剪切文件</h3><p>按下<code>Command+Option+V </code>即可将源文件移动到目标文件夹，这相当于实现了windows 下的剪切功能。</p>
]]></content>
      <tags>
        <tag>macOS</tag>
      </tags>
  </entry>
  <entry>
    <title>macOS显示隐藏文件</title>
    <url>/2022/02/22/macOS%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="苹果Mac操作系统下怎么显示隐藏文件"><a href="#苹果Mac操作系统下怎么显示隐藏文件" class="headerlink" title="苹果Mac操作系统下怎么显示隐藏文件"></a>苹果Mac操作系统下怎么显示隐藏文件</h2><br/>



<h2 id="1-Terminal"><a href="#1-Terminal" class="headerlink" title="1. Terminal"></a>1. Terminal</h2><p>最简单的是通过在Mac终端输入命令。  </p>
<p>显示隐藏文件（注意空格和大小写）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles YES</span><br></pre></td></tr></table></figure>

<p>不显示隐藏文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool <span class="literal">false</span> </span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles NO</span><br></pre></td></tr></table></figure>

<p>输入完成后，单击Enter键，然后直接退出终端，重新启动Finder即可。<br>重启Finder：首先强制退出Finder，再重新启动Finder即可。</p>
<br/>



<h2 id="2-快捷键"><a href="#2-快捷键" class="headerlink" title="2. 快捷键"></a>2. 快捷键</h2><ol>
<li>在这里隐藏文件所在的目录按键盘上面的<code>shift+cmmand+.</code> ，接着看到隐藏文件夹内凡是前面带有小点的隐藏文件，或者是显示淡蓝色的文件都是隐藏文件。通过这个方式就可以查看隐藏的目录。</li>
<li>要恢复隐藏文件的话再次按<code>shift+cmmand+.</code> ，即可恢复文件的隐藏状态，如图二隐藏的文件已经不可见。</li>
</ol>
]]></content>
      <tags>
        <tag>macOS</tag>
      </tags>
  </entry>
  <entry>
    <title>第一二章K8s核心概念和集群搭建</title>
    <url>/2022/03/30/%E7%AC%AC%E4%B8%80%E4%BA%8C%E7%AB%A0K8s%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5%E5%92%8C%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="1-搭建一个k8s集群"><a href="#1-搭建一个k8s集群" class="headerlink" title="1. 搭建一个k8s集群"></a>1. 搭建一个k8s集群</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[master root ~]<span class="comment"># kubectl get no -owide</span></span><br><span class="line">NAME     STATUS   ROLES                  AGE   VERSION   INTERNAL-IP       EXTERNAL-IP   OS-IMAGE                           KERNEL-VERSION                CONTAINER-RUNTIME</span><br><span class="line">master   Ready    control-plane,master   13d   v1.22.7   192.168.123.200   &lt;none&gt;        Rocky Linux 8.5 (Green Obsidian)   5.4.180-1.el8.elrepo.x86_64   docker://20.10.12</span><br><span class="line">node     Ready    &lt;none&gt;                 13d   v1.22.7   192.168.123.220   &lt;none&gt;        Rocky Linux 8.5 (Green Obsidian)   5.4.180-1.el8.elrepo.x86_64   docker://20.10.12</span><br></pre></td></tr></table></figure>



<h2 id="2-新建一个命名空间，创建一个deployment并暴露Service"><a href="#2-新建一个命名空间，创建一个deployment并暴露Service" class="headerlink" title="2.新建一个命名空间，创建一个deployment并暴露Service"></a>2.新建一个命名空间，创建一个deployment并暴露Service</h2><ul>
<li>命名空间： aliang-cka</li>
<li>名称： web</li>
<li>镜像： nginx</li>
</ul>
<h3 id="答案"><a href="#答案" class="headerlink" title="答案:"></a>答案:</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新建一个命名空间</span></span><br><span class="line">kubectl create namespace aliang-cka</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用kubens切换到aliang-cka这个命名空间</span></span><br><span class="line">kubens aliang-cka</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建deployment</span></span><br><span class="line">kubectl create deployment web --image=nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看web这个deployment创建成功没有</span></span><br><span class="line">[master root ~]<span class="comment"># kubectl get deployments.apps web </span></span><br><span class="line">NAME   READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">web    1/1     1            1           7m23s</span><br><span class="line">[master root ~]<span class="comment"># kubectl get pod</span></span><br><span class="line">NAME                  READY   STATUS    RESTARTS   AGE</span><br><span class="line">web-96d5df5c8-pj8cg   1/1     Running   0          7m30s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露一个服务</span></span><br><span class="line">kubectl expose deployment web --port=80 --target-port=80 --<span class="built_in">type</span>=NodePort</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问验证</span></span><br><span class="line">[master root ~]<span class="comment"># curl 10.83.28.128|grep title</span></span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100   615  100   615    0     0   300k      0 --:--:-- --:--:-- --:--:--  300k</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br></pre></td></tr></table></figure>



<h2 id="3-列出命名空间下指定标签pod"><a href="#3-列出命名空间下指定标签pod" class="headerlink" title="3.列出命名空间下指定标签pod"></a>3.列出命名空间下指定标签pod</h2><p>命名空间: kube-system</p>
<p>标签: k8s-app&#x3D;kube-dns</p>
<h3 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查询pod,-n=kube-system,-l=k8s-app=kube-dns</span></span><br><span class="line">[master root ~]<span class="comment"># kubectl get po -n kube-system -l k8s-app=kube-dns</span></span><br><span class="line">NAME                       READY   STATUS    RESTARTS      AGE</span><br><span class="line">coredns-78fcd69978-8kjtl   1/1     Running   1 (10d ago)   12d</span><br><span class="line">coredns-78fcd69978-jkxkd   1/1     Running   1 (10d ago)   12d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看完整标签</span></span><br><span class="line">[master root ~]<span class="comment"># kubectl get po -n kube-system -l k8s-app=kube-dns --show-labels </span></span><br><span class="line">NAME                       READY   STATUS    RESTARTS      AGE   LABELS</span><br><span class="line">coredns-78fcd69978-8kjtl   1/1     Running   1 (10d ago)   12d   k8s-app=kube-dns,pod-template-hash=78fcd69978</span><br><span class="line">coredns-78fcd69978-jkxkd   1/1     Running   1 (10d ago)   12d   k8s-app=kube-dns,pod-template-hash=78fcd69978</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>第三章：K8s监控与日志</title>
    <url>/2022/03/30/%E7%AC%AC%E4%B8%89%E7%AB%A0%EF%BC%9AK8s%E7%9B%91%E6%8E%A7%E4%B8%8E%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<h2 id="1-查看pod日志-并将日志中Eoor的行记录到指定文件"><a href="#1-查看pod日志-并将日志中Eoor的行记录到指定文件" class="headerlink" title="1.查看pod日志,并将日志中Eoor的行记录到指定文件"></a>1.查看pod日志,并将日志中Eoor的行记录到指定文件</h2><ul>
<li>pod名称: web</li>
<li>文件: &#x2F;opt&#x2F;web</li>
</ul>
<h3 id="答案"><a href="#答案" class="headerlink" title="答案:"></a>答案:</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl logs web-96d5df5c8-pj8cg |grep -i error &gt; /opt/web</span><br></pre></td></tr></table></figure>



<h2 id="2-查看指定标签使用cpu最高的pod-并记录到指定文件"><a href="#2-查看指定标签使用cpu最高的pod-并记录到指定文件" class="headerlink" title="2.查看指定标签使用cpu最高的pod,并记录到指定文件"></a>2.查看指定标签使用cpu最高的pod,并记录到指定文件</h2><ul>
<li>标签: app&#x3D;web</li>
<li>文件: &#x2F;opt&#x2F;cpu</li>
</ul>
<h3 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h3><h4 id="先部署metric-server服务"><a href="#先部署metric-server服务" class="headerlink" title="先部署metric-server服务"></a>先部署<code>metric-server服务</code></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载metric-server服务</span></span><br><span class="line">wget https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名yaml文件</span></span><br><span class="line"><span class="built_in">mv</span> components.yaml metric-server.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改yaml文件,在容器参数中添加忽略证书</span></span><br><span class="line"><span class="comment">## 添加忽略证书</span></span><br><span class="line">- --kubelet-insecure-tls</span><br><span class="line"></span><br><span class="line"><span class="comment"># apply这个yaml</span></span><br><span class="line">kubectl apply -f metric-server.yaml </span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证是否注册到apiservers,结果必须为True</span></span><br><span class="line">kubectl get apiservices.apiregistration.k8s.io |grep metrics</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有namespace下的pod的资源使用率,并按照cpu排序</span></span><br><span class="line">[master root ~/k8s-yaml]<span class="comment"># kubectl top pod -l app=web --sort-by=&quot;cpu&quot; -A</span></span><br><span class="line">NAMESPACE    NAME                  CPU(cores)   MEMORY(bytes)   </span><br><span class="line">aliang-cka   web-96d5df5c8-pj8cg   0m           3Mi          </span><br><span class="line"></span><br><span class="line"><span class="comment"># 将结果写入到文件</span></span><br><span class="line">[master root ~/k8s-yaml]<span class="comment"># kubectl top pod -l app=web --sort-by=&quot;cpu&quot; -A &gt; /opt/cpu</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>第五章-k8s调度-pod调度控制篇</title>
    <url>/2022/03/30/%E7%AC%AC%E4%BA%94%E7%AB%A0-k8s%E8%B0%83%E5%BA%A6-pod%E8%B0%83%E5%BA%A6%E6%8E%A7%E5%88%B6%E7%AF%87/</url>
    <content><![CDATA[<h2 id="1-创建一个pod-分配到指定标签node上"><a href="#1-创建一个pod-分配到指定标签node上" class="headerlink" title="1. 创建一个pod,分配到指定标签node上"></a>1. 创建一个pod,分配到指定标签node上</h2><ul>
<li>pod名: web</li>
<li>镜像: nginx</li>
<li>node标签: disk&#x3D;ssd</li>
</ul>
<h3 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 给node打标签</span></span><br><span class="line">kubectl label node n2 disk=ssd</span><br></pre></td></tr></table></figure>

<p><code>kubectl run web --image=nginx -oyaml --dry-run &gt;1.yaml</code>创建yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">  <span class="attr">nodeSelector:</span></span><br><span class="line">    <span class="attr">disk:</span> <span class="string">ssd</span></span><br></pre></td></tr></table></figure>

<p><code>kubectl apply -f 1.yaml</code>创建pod</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看pod运行是否运行在n2节点</span></span><br><span class="line">[m1 root ~]<span class="comment"># kubectl get po -owide</span></span><br><span class="line">NAME   READY   STATUS    RESTARTS   AGE     IP              NODE   NOMINATED NODE   READINESS GATES</span><br><span class="line">web    1/1     Running   0          2m41s   100.104.217.1   n2     &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure>



<h2 id="2-确保每个节点上运行一个pod"><a href="#2-确保每个节点上运行一个pod" class="headerlink" title="2.确保每个节点上运行一个pod"></a>2.确保每个节点上运行一个pod</h2><ul>
<li>pod名称: nginx</li>
<li>镜像: nginx</li>
</ul>
<h3 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">redis-cache</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">store</span></span><br><span class="line">  <span class="comment"># 副本数3</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">store</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="comment"># pod反亲和</span></span><br><span class="line">        <span class="attr">podAntiAffinity:</span></span><br><span class="line">          <span class="comment"># 硬需求/硬策略</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">labelSelector:</span></span><br><span class="line">              <span class="attr">matchExpressions:</span></span><br><span class="line">              <span class="comment"># 禁止在同一node上部署多个标签为app=strore的副本</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">app</span></span><br><span class="line">                <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                <span class="attr">values:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">store</span></span><br><span class="line">            <span class="comment"># 用主机名来作为拓扑域</span></span><br><span class="line">            <span class="attr">topologyKey:</span> <span class="string">&quot;kubernetes.io/hostname&quot;</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">redis-server</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">redis:3.2-alpine</span></span><br></pre></td></tr></table></figure>

<h2 id="3-查看集群中状态为ready的node数量-并将结果写到指定文件"><a href="#3-查看集群中状态为ready的node数量-并将结果写到指定文件" class="headerlink" title="3.查看集群中状态为ready的node数量,并将结果写到指定文件"></a>3.查看集群中状态为ready的node数量,并将结果写到指定文件</h2><h3 id="答案-2"><a href="#答案-2" class="headerlink" title="答案:"></a>答案:</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看nodes状态()</span></span><br><span class="line">[m1 root ~]<span class="comment"># kubectl describe nodes|grep -i taint</span></span><br><span class="line">Taints:             &lt;none&gt;</span><br><span class="line">Taints:             &lt;none&gt;</span><br><span class="line">Taints:             &lt;none&gt;</span><br><span class="line">Taints:             &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入结果</span></span><br><span class="line"><span class="built_in">echo</span> 4 &gt;/nodes_num.txt</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>第六章：K8s网络-Service与Ingress篇</title>
    <url>/2022/03/30/%E7%AC%AC%E5%85%AD%E7%AB%A0%EF%BC%9AK8s%E7%BD%91%E7%BB%9C-Service%E4%B8%8EIngress%E7%AF%87/</url>
    <content><![CDATA[<h2 id="1-给一个pod创建service-并可以通过ClusterIP-x2F-NodePort访问"><a href="#1-给一个pod创建service-并可以通过ClusterIP-x2F-NodePort访问" class="headerlink" title="1.给一个pod创建service,并可以通过ClusterIP&#x2F;NodePort访问"></a>1.给一个pod创建service,并可以通过ClusterIP&#x2F;NodePort访问</h2><ul>
<li>名称: web-service</li>
<li>pod名称: web</li>
<li>容器端口: 80</li>
</ul>
<h3 id="答"><a href="#答" class="headerlink" title="答:"></a>答:</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看pod的标签</span></span><br><span class="line">kubectl get po web -owide --showlable</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建service,选择pod的标签</span></span><br></pre></td></tr></table></figure>



<h2 id="2-任意名称创建deployment和service-使用busybox容器nslookup解析service"><a href="#2-任意名称创建deployment和service-使用busybox容器nslookup解析service" class="headerlink" title="2.任意名称创建deployment和service,使用busybox容器nslookup解析service"></a>2.任意名称创建deployment和service,使用busybox容器nslookup解析service</h2><h3 id="答-1"><a href="#答-1" class="headerlink" title="答:"></a>答:</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 3.列出命名空间下,某个service关联的所有pod,并将pod名称写到/opt/pod.txt中(使用标签筛选)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 答:</span></span><br><span class="line"></span><br><span class="line">```bash</span><br></pre></td></tr></table></figure>



<h2 id="4-使用ingress将美女示例应用暴露到外部访问"><a href="#4-使用ingress将美女示例应用暴露到外部访问" class="headerlink" title="4.使用ingress将美女示例应用暴露到外部访问"></a>4.使用ingress将美女示例应用暴露到外部访问</h2><ul>
<li>镜像: lizhenliang&#x2F;java-demo</li>
</ul>
<h3 id="答-2"><a href="#答-2" class="headerlink" title="答:"></a>答:</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>第四章：K8s管理应用生命周期-Pod篇</title>
    <url>/2022/03/30/%E7%AC%AC%E5%9B%9B%E7%AB%A0%EF%BC%9AK8s%E7%AE%A1%E7%90%86%E5%BA%94%E7%94%A8%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F-Pod%E7%AF%87/</url>
    <content><![CDATA[<h2 id="1-创建一个4容器pod"><a href="#1-创建一个4容器pod" class="headerlink" title="1.创建一个4容器pod"></a>1.创建一个4容器pod</h2><p>容器列表:</p>
<ul>
<li>nginx</li>
<li>redis</li>
<li>memcached</li>
<li>consul</li>
</ul>
<h3 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">test</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">redis</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">memcached</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">memcached</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">consul</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">consul</span></span><br></pre></td></tr></table></figure>

<p>apply这个yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f pod.yaml </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看pod状态</span></span><br><span class="line">[master root ~]<span class="comment"># kubectl get pod </span></span><br><span class="line">NAME   READY   STATUS    RESTARTS   AGE</span><br><span class="line"><span class="built_in">test</span>   4/4     Running   0          2m17s</span><br></pre></td></tr></table></figure>



<h2 id="2-在节点上配置kubelet托管启动一个pod"><a href="#2-在节点上配置kubelet托管启动一个pod" class="headerlink" title="2.在节点上配置kubelet托管启动一个pod"></a>2.在节点上配置kubelet托管启动一个pod</h2><ul>
<li>节点: node1</li>
<li>pod名称: web</li>
<li>镜像: nginx</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ssh登录到node1</span></span><br><span class="line">ssh node1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看配置文件中的静态pod路径staticPodPath: /etc/kubernetes/manifests</span></span><br><span class="line"><span class="built_in">cat</span> /var/lib/kubelet/config.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在staticPodPath中创建static-web.yaml</span></span><br><span class="line"><span class="built_in">touch</span> /etc/kubernetes/manifests/static-web.yaml</span><br></pre></td></tr></table></figure>

<p>static-web.yaml文件示例</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="comment"># 静态pod的名称</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">static-web</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="comment"># 标签</span></span><br><span class="line">    <span class="attr">role:</span> <span class="string">myrole</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="comment"># 容器名</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">      <span class="comment"># 镜像名</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure>

<p>查看静态pod</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[master root ~]<span class="comment"># kubectl get po|grep -i static-web</span></span><br><span class="line">static-web-node   1/1     Running   0          6m10s</span><br></pre></td></tr></table></figure>



<h3 id="3-检查容器中文件是否创建-如果没有被检测到pod重启–探针"><a href="#3-检查容器中文件是否创建-如果没有被检测到pod重启–探针" class="headerlink" title="3.检查容器中文件是否创建,如果没有被检测到pod重启–探针"></a>3.检查容器中文件是否创建,如果没有被检测到pod重启–探针</h3><ul>
<li>文件路径: &#x2F;tmp&#x2F;test.sock</li>
</ul>
<h3 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">test</span></span><br><span class="line">    <span class="attr">args:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/bin/bash</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">touch</span> <span class="string">/tmp/test.sock;</span> <span class="string">sleep</span> <span class="number">600</span><span class="string">;</span> </span><br><span class="line">    <span class="attr">livenessProbe:</span></span><br><span class="line">      <span class="attr">exec:</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">cat</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">/tmp/test.sock</span></span><br><span class="line">      <span class="attr">initialDelaySeconds:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">periodSeconds:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>第四章：K8s管理应用生命周期-Deployment篇</title>
    <url>/2022/03/30/%E7%AC%AC%E5%9B%9B%E7%AB%A0%EF%BC%9AK8s%E7%AE%A1%E7%90%86%E5%BA%94%E7%94%A8%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F-Deployment%E7%AF%87/</url>
    <content><![CDATA[<h2 id="1-创建一个deployment副本数为3-然后滚动更新镜像版本-并记录这个更新记录-最后再回滚到上一个版本"><a href="#1-创建一个deployment副本数为3-然后滚动更新镜像版本-并记录这个更新记录-最后再回滚到上一个版本" class="headerlink" title="1.创建一个deployment副本数为3,然后滚动更新镜像版本,并记录这个更新记录,最后再回滚到上一个版本"></a>1.创建一个deployment副本数为3,然后滚动更新镜像版本,并记录这个更新记录,最后再回滚到上一个版本</h2><ul>
<li>名称: nginx</li>
<li>镜像版本: 1.16</li>
<li>更新镜像版本: 1.17</li>
</ul>
<h3 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建deploy,镜像nginx1.6,副本数3</span></span><br><span class="line">kubectl create deployment nginx --image=nginx:1.16 --replicas=3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新镜像版本到1.17,并对本次升级加上变化注解--记录这次更新</span></span><br><span class="line">kubectl <span class="built_in">set</span> image deployment/nginx nginx=nginx:1.17 --record</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看镜像是否为1.17</span></span><br><span class="line">[master root ~]<span class="comment"># kubectl describe deployment/nginx|grep -i image</span></span><br><span class="line">                        kubernetes.io/change-cause: kubectl <span class="built_in">set</span> image deployment/nginx nginx=nginx:1.17 --record=<span class="literal">true</span></span><br><span class="line">    Image:        nginx:1.17</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看rs</span></span><br><span class="line">[master root ~]<span class="comment"># kubectl get rs -owide</span></span><br><span class="line">NAME               DESIRED   CURRENT   READY   AGE     CONTAINERS   IMAGES       SELECTOR</span><br><span class="line">nginx-6d4cf56db6   0         0         0       11m     nginx        nginx:1.16   app=nginx,pod-template-hash=6d4cf56db6</span><br><span class="line">nginx-db749865c    3         3         3       4m30s   nginx        nginx:1.17   app=nginx,pod-template-hash=db749865c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看deployment历史版本</span></span><br><span class="line">[master root ~]<span class="comment"># kubectl rollout history deployment </span></span><br><span class="line">deployment.apps/nginx </span><br><span class="line">REVISION  CHANGE-CAUSE</span><br><span class="line">1         &lt;none&gt;</span><br><span class="line">2         kubectl <span class="built_in">set</span> image deployment/nginx nginx=nginx:1.17 --record=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 回滚到上一个版本,监视deployment的滚动升级状态直到完成</span></span><br><span class="line">[master root ~]<span class="comment"># kubectl rollout undo deployment nginx &amp;&amp; kubectl rollout status -w deployment nginx</span></span><br><span class="line">deployment.apps/nginx rolled back</span><br><span class="line">Waiting <span class="keyword">for</span> deployment <span class="string">&quot;nginx&quot;</span> rollout to finish: 1 out of 3 new replicas have been updated...</span><br><span class="line">Waiting <span class="keyword">for</span> deployment <span class="string">&quot;nginx&quot;</span> rollout to finish: 1 out of 3 new replicas have been updated...</span><br><span class="line">Waiting <span class="keyword">for</span> deployment <span class="string">&quot;nginx&quot;</span> rollout to finish: 2 out of 3 new replicas have been updated...</span><br><span class="line">Waiting <span class="keyword">for</span> deployment <span class="string">&quot;nginx&quot;</span> rollout to finish: 2 out of 3 new replicas have been updated...</span><br><span class="line">Waiting <span class="keyword">for</span> deployment <span class="string">&quot;nginx&quot;</span> rollout to finish: 1 old replicas are pending termination...</span><br><span class="line">Waiting <span class="keyword">for</span> deployment <span class="string">&quot;nginx&quot;</span> rollout to finish: 1 old replicas are pending termination...</span><br><span class="line">deployment <span class="string">&quot;nginx&quot;</span> successfully rolled out</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看deploy/nginx的镜像版本</span></span><br><span class="line">[master root ~]<span class="comment"># kubectl describe deployments.apps nginx|grep -i image</span></span><br><span class="line">    Image:        nginx:1.16</span><br></pre></td></tr></table></figure>





<h2 id="2-给deploy-x2F-web扩容副本数为3"><a href="#2-给deploy-x2F-web扩容副本数为3" class="headerlink" title="2. 给deploy&#x2F;web扩容副本数为3"></a>2. 给deploy&#x2F;web扩容副本数为3</h2><h3 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建deploy/web</span></span><br><span class="line">kubectl create deployment web --image=nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩容副本数为3</span></span><br><span class="line">kubectl scale deployment web --replicas=3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看有几个pod</span></span><br><span class="line">[master root ~]<span class="comment"># kubectl get po</span></span><br><span class="line">NAME                  READY   STATUS    RESTARTS   AGE</span><br><span class="line">web-96d5df5c8-c6xcs   1/1     Running   0          2m42s</span><br><span class="line">web-96d5df5c8-kslrm   1/1     Running   0          109s</span><br><span class="line">web-96d5df5c8-xhv5n   1/1     Running   0          109s</span><br></pre></td></tr></table></figure>



<h2 id="3-把deploy输出为json文件-再删除创建的deploy"><a href="#3-把deploy输出为json文件-再删除创建的deploy" class="headerlink" title="3.把deploy输出为json文件,再删除创建的deploy"></a>3.把deploy输出为json文件,再删除创建的deploy</h2><h3 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 把deploy/web输出为json文件</span></span><br><span class="line">[master root ~]<span class="comment"># kubectl get deployments.apps web -ojson&gt; dep.json</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据json删除这个deploy</span></span><br><span class="line">[master root ~]<span class="comment"># kubectl delete -f dep.json </span></span><br><span class="line">deployment.apps <span class="string">&quot;web&quot;</span> deleted</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看这个dep还在不在</span></span><br><span class="line">[master root ~]<span class="comment"># kubectl get deployments.apps </span></span><br><span class="line">No resources found <span class="keyword">in</span> aliang-cka namespace.</span><br></pre></td></tr></table></figure>

<h2 id="4-生成一个deploy的yaml文件保存到-x2F-opt-x2F-deploy-yaml"><a href="#4-生成一个deploy的yaml文件保存到-x2F-opt-x2F-deploy-yaml" class="headerlink" title="4.生成一个deploy的yaml文件保存到&#x2F;opt&#x2F;deploy.yaml"></a>4.生成一个deploy的yaml文件保存到&#x2F;opt&#x2F;deploy.yaml</h2><ul>
<li>名称:web</li>
<li>标签: app_env_stage&#x3D;dev</li>
</ul>
<h3 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成yaml文件</span></span><br><span class="line">kubectl create deployment web --image=nginx -oyaml --dry-run &gt; /opt/deploy.yaml </span><br></pre></td></tr></table></figure>

<p>修改后的yaml文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">app_env_stage:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">      <span class="attr">app_env_stage:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">        <span class="attr">app_env_stage:</span> <span class="string">dev</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
</search>
